syntax = "proto3";

package data;

// Error message definition
message Error {
    string id = 1;
    string type = 2;
    string message = 3;
    repeated string traceback = 4;
    string thread = 5;
    string start_context = 6;
    int64 thread_id = 7;
    bool is_daemon = 8;
    map<string, string> local_vars = 9;
    map<string, string> global_vars = 10;
    map<string, string> environment_vars = 11;
    map<string, string> module_versions = 12;
}

// DataPackageModule message definition
message DataPackageModule {
    string id = 1;
    string module_id = 2;
    string module_name = 3;
    bool running = 4;
    double start_time = 5;
    double end_time = 6;
    double waiting_time = 7;
    double total_time = 8;
    repeated DataPackageModule sub_modules = 9;
    string message = 10;
    bool success = 11;
    Error error = 12;
}

// DataPackagePhase message definition
message DataPackagePhase {
    string id = 1;
    string phase_id = 2;
    string phase_name = 3;
    bool running = 4;
    double start_time = 5;
    double end_time = 6;
    double total_time = 7;
    repeated DataPackageModule modules = 8;
}

// DataPackageController message definition
message DataPackageController {
    string id = 1;
    string controller_id = 2;
    string controller_name = 3;
    string mode = 4;
    int32 workers = 5;
    int32 sequence_number = 6;
    bool running = 7;
    double start_time = 8;
    double end_time = 9;
    double input_waiting_time = 10;
    double output_waiting_time = 11;
    double total_time = 12;
    repeated DataPackagePhase phases = 13;
}

// DataPackage message definition
message DataPackage {
    string id = 1;
    string pipeline_id = 2;
    string pipeline_name = 3;
    string pipeline_instance_id = 4;
    repeated DataPackageController controllers = 5;
    bytes data = 6;
    bool running = 7;
    double start_time = 8;
    double end_time = 9;
    double total_time = 10;
    bool success = 11;
    repeated Error errors = 12;
}

message RequestDP {
    DataPackage data_package = 1;
    string data_package_controller_id = 2;
    string data_package_phase_id = 3;
    string data_package_module_id = 4;
}

message ReturnDPandError {
    DataPackage data_package = 1;
    Error error = 2;
}

service ModuleService {
    rpc run (RequestDP) returns (ReturnDPandError);
}
